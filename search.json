{"meta":{"title":"Lencx's blog","subtitle":null,"description":"Don't wait for the perfect moment take the moment and make it perfect","author":"Len C...","url":"https://lencx.github.io/blog"},"pages":[{"title":"about","date":"2017/03/05","updated":"2017/03/20","comments":true,"path":"about/index.html","permalink":"https://lencx.github.io/blog/about/index.html","excerpt":"","text":"About me Name: LenEmail: cxin1314@gmail.com 在技术的道路上，自己永远都是个小白，知道的越多，才发现不会的更多……（然后整个人都崩溃了，(ಥ﹏ಥ)，哈哈，不过与其悲观，不如享受这个过程，做前端自认为还是很幸福的，起码还可以调戏调戏浏览器，虽然结果是经常性的被浏览器所调戏，又绕回来了。。。） 对于前端新技术，喜欢瞎折腾，爬过一些坑。 其实是好多坑，也甩过膀子，在问题的处理上，当解决不了时，其实分两种情况： 技术或者说能力问题 思路逻辑问题 当碰见a时，短时间不会有太大改变(短时间指的是用google或stackoverflow etc.不能很快解决的)。但如果是b时，自己所需要做的就是先让自己冷静下来，再重新整理思路。钻牛角尖是解决不了问题的。先晾两天再说，注：此处说的都是学习中的问题，而非工作中，要是晾几天，也不用去上班了， hahah…也不是说什么都不想的晾几天。晾到最后搞不好自己还要把问题忘了，晾是在不给自己施加压力的情况下，重新整理思路。 虽脑子有点笨，但好在性格不急躁。所以在前端的道路上，虽然不是进步很快，也算是一路小跑了。我始终坚信，量变终究会引起质变。爬的坑多了，摔得跟头多了，其实，也就习惯了 haha (ᗒᗨᗕ)。 在追求技术的道路上，自学很重要，但我觉得更重要的是心态。当做一件事情是发自内心的想把它做好时，你就不会满足于现状。所以每天叫醒自己的不是⏰， 而是理想。 编程给我最大的收获就是，计算机的眼里是揉不进沙子的，人与人之间可能存在欺骗，但是你的代码骗不了计算机，错就是❌ 。 我最喜欢做的事就是听着音乐🎵写代码，感觉很放松，有时甚至觉得音乐与代码就是天生的伴侣，一动一静。虽然听的音乐很杂，但还是比较喜欢纯音乐，很享受。。。 自认为有那么一丢丢的艺术细胞，下面就献个丑： 画这对兄妹的灵感来源于0和1，在计算机的世界，0和1对程序猿 🐒 的意义就不用我说了… 虽然计算机的世界就0和1，通与断的两种状态，却正在一步步的改变着我们的这个时代。与道德经中的「道生一，一生二，二生三，三生万物」不谋而合，没读过道德经，这句话只是自己的理解（注意GG的眼睛 👀 ，MM是GG的变体。0代表假false，1代表真true,做人也如此，真假一念间）"},{"title":"categories","date":"2017/03/05","updated":"2017/03/05","comments":true,"path":"categories/index.html","permalink":"https://lencx.github.io/blog/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017/03/05","updated":"2017/03/16","comments":true,"path":"tags/index.html","permalink":"https://lencx.github.io/blog/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"JS Console","slug":"js-console","date":"2017/03/25","updated":"2017/03/25","comments":true,"path":"2017/03/25/js-console/","link":"","permalink":"https://lencx.github.io/blog/blog/2017/03/25/js-console/","excerpt":"","text":"log(), info()123console.log('a')// 可接受多个参数console.log('a', 'b', 1, 2) 占位符 占位符 符号 字符 %s CSS %c 整数 %d / %i 浮点数 %f 对象 %o ⚠️：不同格式数据必须使用对应格式的占位符 12345// %sconsole.log('%s + %s = %s', 2, 3, 6) // 2 + 3 = 6console.log('%s is red', '#f00') // #f00 is red// %cconsole.log('%chello, world', 'color:blue;background:yellow;font-size:36px;') group()1console.group(); warn(), error()1234// 警告console.warn()// 出错console.error()","categories":[{"name":"js","slug":"js","permalink":"https://lencx.github.io/blog/categories/js/"}],"tags":[{"name":"Tricks","slug":"Tricks","permalink":"https://lencx.github.io/blog/tags/Tricks/"},{"name":"console","slug":"console","permalink":"https://lencx.github.io/blog/tags/console/"}]},{"title":"Mac command","slug":"command","date":"2017/03/24","updated":"2017/03/26","comments":true,"path":"2017/03/24/command/","link":"","permalink":"https://lencx.github.io/blog/blog/2017/03/24/command/","excerpt":"","text":"123456789101112131415161718192021222324252627# cd\\ # 直接返回到用户根路径cd# ls -a 查看隐藏文件ls# 创建文件touch &lt;filename&gt;# 删除文件rm -rf# 重命名文件mv &lt;old filename&gt; &lt;new filename&gt;# 文件追加内容# echo \"msg\" &gt;&gt; &lt;filename&gt;echo# used to format and display the man pagesman# 查看文件内容cat &lt;filename&gt;# 列出mac下所有的shell类型## /bin/bash /bin/csh /bin/ksh /bin/sh /bin/tcsh /bin/zshls /bin/*## 当前使用的shell类型echo $SHELL# 选择shell类型chsh -s /bin/zsh$(which /bin/bash)# 当前路径pwd","categories":[{"name":"bash","slug":"bash","permalink":"https://lencx.github.io/blog/categories/bash/"}],"tags":[{"name":"command","slug":"command","permalink":"https://lencx.github.io/blog/tags/command/"}]},{"title":"Git Basics","slug":"git-basics","date":"2017/03/24","updated":"2017/03/27","comments":true,"path":"2017/03/24/git-basics/","link":"","permalink":"https://lencx.github.io/blog/blog/2017/03/24/git-basics/","excerpt":"File status lifecycle 文件状态的生命周期 Basics command 基础命令 1234567891011121314151617181920212223242526272829# Getting startedgit config --global user.name \"your name\"git config --global user.email \"your@email\"# initializes a directory as a git repositorygit init# view the status of your files in the working directory and staging areagit status# adds file contents to the staging area## git add -A## or ## git add .git add# shows diff of what is staged and what is modified but unstaged## git diff --staged # 查看暂存区变化git diff# records a snapshot of the staging area# git commit -m \"msg\"git commit# add &amp; commit 合二为一， 前提是必须正常提交过一次才能使用git commit -a -m \"msg\"# remove files from the staging area## git rm &lt;file name&gt; # 从暂存区将文件移除git rm# git rm --cached orig; mv orig new; git add new## git mv &lt;old filename&gt; &lt;new filename&gt; # staging area changedgit mv# show commit history of a branchgit log","text":"File status lifecycle 文件状态的生命周期 Basics command 基础命令 1234567891011121314151617181920212223242526272829# Getting startedgit config --global user.name \"your name\"git config --global user.email \"your@email\"# initializes a directory as a git repositorygit init# view the status of your files in the working directory and staging areagit status# adds file contents to the staging area## git add -A## or ## git add .git add# shows diff of what is staged and what is modified but unstaged## git diff --staged # 查看暂存区变化git diff# records a snapshot of the staging area# git commit -m \"msg\"git commit# add &amp; commit 合二为一， 前提是必须正常提交过一次才能使用git commit -a -m \"msg\"# remove files from the staging area## git rm &lt;file name&gt; # 从暂存区将文件移除git rm# git rm --cached orig; mv orig new; git add new## git mv &lt;old filename&gt; &lt;new filename&gt; # staging area changedgit mv# show commit history of a branchgit log Working with remotes 远端 123456789101112# copy a git repositorygit clone URL# list, add and delete remote repository aliasesgit remote# download new brabches and data from a remote repositorygit fetch# merge a bash context into your current onegit merge# fetch from a remote repo and try to merge into the current branchgit pull# push your new branches and data to a remote repositorygit push Taging 标签 12345678910# listing tagsgit tag# create taggit tag -a v1.0 -m \"my version 1.0\"# showing tag data along with commitgit show v1.0# tagging latergit tag -a v0.9 -m \"version 0.9\" [commit]# sharing tagsgit push origin [tagname] Git configuration file git配置文件： ~/.gitconfig(or ~/.config/git/config) user[用户] alias[别名] core.editor[核心编辑器] 12345678910111213[user] name = Len email = cxin1314@gmail.com[alias] st = status ci = commit co = checkout br = branch df = diff lg = log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit last = log --color --graph --pretty=format:&apos;%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset&apos; --abbrev-commit -1 HEAD[core] editor = emacs Snapshot git 是基于快照的，即文件改变，将该文件全部进行保存，blob值改变，该文件所属的目录tree值也改变tree: 目录(dir)blob: 文件(file) 12cd .git/objectsgit cat-file -p &lt;SHA-1&gt; Undoing Things 撤销⚠️： git checkout -- is dangerous. May be git stash is better.","categories":[{"name":"git","slug":"git","permalink":"https://lencx.github.io/blog/categories/git/"}],"tags":[{"name":"Tricks","slug":"Tricks","permalink":"https://lencx.github.io/blog/tags/Tricks/"},{"name":"command","slug":"command","permalink":"https://lencx.github.io/blog/tags/command/"},{"name":"git","slug":"git","permalink":"https://lencx.github.io/blog/tags/git/"}]},{"title":"hexo常见问题汇总","slug":"hexo-post","date":"2017/03/22","updated":"2017/03/26","comments":true,"path":"2017/03/22/hexo-post/","link":"","permalink":"https://lencx.github.io/blog/blog/2017/03/22/hexo-post/","excerpt":"","text":"写作12345# 创建一篇文章# hexo new post &lt;your-post-title&gt;hexo new &lt;your-post-title&gt;# 创建一个页面hexo new page &lt;your-page-name&gt; 常用命令12345hexo init # 初始化hexo clean # 删除生成的文件和缓存hexo g # 生成静态文件hexo s # 启动服务，可以在本地预览hexo d # 部署 git部署1234567# 如果未安装hexo-deployer-gitnpm install hexo-deployer-git --save# 从远端克隆 .deploy_git 目录git clone &lt;gh-pages repo&gt; .deploy_git# 删除 .deploy_gitrm -rf .deploy_git 1234deploy: type: git repo: &lt;repository url&gt; branch: [branch] #master","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lencx.github.io/blog/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lencx.github.io/blog/tags/hexo/"}]},{"title":"hexo-theme-lencx","slug":"hexo-theme-lencx","date":"2017/03/20","updated":"2017/03/26","comments":true,"path":"2017/03/20/hexo-theme-lencx/","link":"","permalink":"https://lencx.github.io/blog/blog/2017/03/20/hexo-theme-lencx/","excerpt":"Description 描述 本主题使用pug[jade], sass编写，可用webpack对css，js进行压缩。之所以选择pug是因为觉得这种模板语法很优雅（用缩进表示DOM结构，很简洁, 逻辑采用js的语法，作为前端表示无压力， include, block, mixins etc. 用起来也很方便。 具体语法可以参考Pug API，Sass API）。本主题支持响应式，未借助第三方库，如想使用栅格系统，在／source/css/part/_grid.scss中有一个简易版的bootstrap栅格,未build的scss源文件文件可参考bs-grid。或者使用postcss的插件库lost, postcss-cssnext etc. 进行编写。了解更多信息，请参考postcss。","text":"Description 描述 本主题使用pug[jade], sass编写，可用webpack对css，js进行压缩。之所以选择pug是因为觉得这种模板语法很优雅（用缩进表示DOM结构，很简洁, 逻辑采用js的语法，作为前端表示无压力， include, block, mixins etc. 用起来也很方便。 具体语法可以参考Pug API，Sass API）。本主题支持响应式，未借助第三方库，如想使用栅格系统，在／source/css/part/_grid.scss中有一个简易版的bootstrap栅格,未build的scss源文件文件可参考bs-grid。或者使用postcss的插件库lost, postcss-cssnext etc. 进行编写。了解更多信息，请参考postcss。 Install plugins 使用本主题需要安装的依赖, 在根目录进行安装 1npm install hexo-renderer-pug hexo-renderer-sass --save Create categories, tags and about page 创建分类页与标签页123456# categories页面hexo new page categories# tags页面hexo new page tags# about页面hexo new page about ⚠️ ： categories与tags页面创建后无需编辑 主题设置及特性（Theme Setting and Features）Navigation(menu) 菜单 窗口宽度小于768px时，菜单折叠 当垂直滚动超过500px时，header会在一秒内消失。回滚时又在800ms内显示出来（呃，你若问我八百毫秒什么概念，我也不知道，自己滚滚就知道了。重在体验…😉 ） Archives 归档页 点击年份可折叠, 月份左上角显示本月文章数量⚠️ ：比较重要的一条，想要实现我图中的一长条不间断的显示，而不产生分页。请将根目录中_config.yml的 archive_generator: per_page值设大一点，为了免去麻烦，省的哪天再超了，我一次性设置了10000，虽然我这辈子都写不出来这么多，哈哈，就是任性。你要是不想任性，可以先设个几百条。 12archive_generator: per_page: 10000 关闭状态 打开状态 Categories 分类页 稀松平常，没啥好说的，本主题大量使用了文本阴影效果，不知会不会适得其反 🤔 。 Tags 标签页 偷偷告诉你，不光是这里的标签，在文章中的标签同样可以改变颜色， 角度啥的。（若不信，多刷新几次浏览器 😜 ）⚠️ ：这里同样有一个设置，不过不是针对menu中的tags设定的，而是从sidebar中的tagCloud点击跳转过来的当前tag的显示数量。值写小了，无外乎就是一个标签多分几页，看个人喜好，自行设定。此配置也是在根目录下的_config.yml文件中进行设置。 12tag_generator: per_page: 20 random box shadow random border-radius random font color random vertical position 随机1 随机2 Back To Top 回到顶部按钮 当垂直滚动超过300px时，按钮出现。小于300px消失 Posts List 首页文章列表 每页显示的文章数，需在根目录中的/_config.yml中进行设置123# Pagination## Set per_page to 0 to disable paginationper_page: 8 Sidebar 侧栏 窗口宽度小于992px，侧栏隐藏 与sidebar有关的配置项，文件路径/theme/_config.yml 1234567891011121314151617sidebar: tagCloud: # 是否开启标签云 enable: true # 是否开启背景（可用图片或直接设置背景色） bgEnable: true # bg: '#000' # '/blog' 是项目的根路径 默认跟路径是'／'，具体是啥请看根目录中_config.yml的root配置项 bg: url('/blog/img/bg-1.png') # 是否开启归档 archives: true # 是否开启分类 categories: true # 最新文章 recent_posts: enable: true # 是否开启 num: 5 # 条数 Tags Cloud canvas random font color 注：如需更改字体颜色，只能改源码了，我将随机色写入压缩后的js文件中，即/theme/hexo-theme-lencx/libs/tagcanvas.min.js font family, background color, text shadow etc. 可以在/theme/hexo-theme-lencxs/libs/tagcloud.js中更改 当然没事也可以换换背景啥的，也是👌 的。 Archives 锚点 点击某个月份链接跳转后定位到该月（该年份文章比较多时，此功能还比较实用 👍 ） 点击年份可折叠 一长坨看着就不舒服 ……^_^ 括号中数字为该月的文章数 Categories 呃， 貌似没啥说的。😳 Recent posts 最新文章 默认展示最新的5篇，可以在/theme/_config.yml中重新进行设定 Post Style 所有配置都在/theme/_config.yml中 Post meta 12345678# widget (文章小部件)# true 开启# false 关闭postMeta: author: true # 作者 date: true # 日期 tags: true # 标签 category: true # 分类 Code theme 点击代码块右上角的theme[white|black]可看到效果 Post toc click toc title [folding | open] title setting123post: # 文章目录标题文字设置 toc_title: CONTENT Read more 123post: # 阅读全文文字设置 excerpt_link: Read More Comment 评论 DISQUS 国内可能无法访问，如果使用该评论插件，我在main.js文件中做了一次判断，在3s内如果未加载，则显示Disqus due to network reasons, can not be loaded.，如果是因为网速不好，在大于3s后加载了，显示上可能会出现点小问题，但是如果是在10s内加载的，显示的问题还是会被移除掉。由于暂时没想到好的解决办法，该bug目前只能先这样，以后有好的办法再解决。但是如果不考虑网速问题。这个判断还是没什么问题的。即在3s内无法加载，则显示Disqus due to network reasons, can not be loaded.，否则正常加载Disqus 12disqus: disqus_shortname: lencx Theme Config 主题配色在/source/css/_theme.color.scss文件中几乎包含了该主题的所有颜色变量（background, color, box-shadow, text-shadow）,在／source/css/variable／_mixin.scss文件中的@mixin radius 参数$radius-enble值为true时启用所有的圆角，false则关闭。 Analytics 流量分析 Google Analytics12analytics: google_analytics: # your Google AnalyticsId Social 社区帐号123456social: github: your@github email: your@email.com facebook: your@facebook.com twitter: your@twitter.com stact_overflow: Summary 结束语 还有很多细节上的处理就只能靠自己慢慢发现了。hexo-theme-lencx，本人会长期进行维护，哪天看着哪里不合眼了，还会修修补补，亦或大刀阔斧也说不准。 加点新鲜的，好玩的东东。时间有点仓促，还有很多功能还未添加，以后都会慢慢的加进来。","categories":[{"name":"hexo","slug":"hexo","permalink":"https://lencx.github.io/blog/categories/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://lencx.github.io/blog/tags/hexo/"},{"name":"theme","slug":"theme","permalink":"https://lencx.github.io/blog/tags/theme/"}]},{"title":"CSS之清除浮动","slug":"css-clearfix","date":"2016/05/04","updated":"2017/03/26","comments":true,"path":"2016/05/04/css-clearfix/","link":"","permalink":"https://lencx.github.io/blog/blog/2016/05/04/css-clearfix/","excerpt":"给元素设置浮动属性会使元素漂浮于普通文本流之上，导致元素内部不存在其他普通流元素，表现出的高度为0（高度塌陷，如果外层元素未给出具体高度，这时的盒子模型是不能自动计算出内部元素的实际高度）。","text":"给元素设置浮动属性会使元素漂浮于普通文本流之上，导致元素内部不存在其他普通流元素，表现出的高度为0（高度塌陷，如果外层元素未给出具体高度，这时的盒子模型是不能自动计算出内部元素的实际高度）。 1234567891011121314151617181920212223&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;meta charset=\"UTF-8\"&gt;&lt;style&gt;#wrap&#123; background: red; color: #ff3600;&#125;#wrap div&#123; width: 400px; background: green; margin: 5px; float: left;&#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=\"wrap\" class=\"clearfix\"&gt; &lt;div class=\"div1\"&gt;我是浮动div1&lt;/div&gt; &lt;div class=\"div2\"&gt;我是浮动div2&lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 在id=&quot;wrap&quot;的div中的末尾添加额外的标签如div，br，其他标签也可以，但必须是块级元素（两种方式）。 12345&lt;!--使用div标签与其自身的html属性--&gt;&lt;div style=\"clear: both\"&gt;&lt;/div&gt;&lt;!--使用br标签与其自身的html属性--&gt;&lt;br clear=\"all\"/&gt; 在id=&quot;wrap&quot;的div属性中添加属性（两种方式）。 123456789/* 父元素添加float,使其脱离普通文本流，盒子模型能够计算其实际的高度（不推荐使用）。 */#wrap&#123; float: left;&#125;/* 父元素添加overflow */#wrap&#123; overflow: hidden;&#125; 闭合浮动（闭合浮动原理——自行了解 hasLayout 和 Block formatting contexts） 12345678910111213141516171819202122232425.clearfix:after&#123; content: \".\"; display: block; visibility: hidden; height: 0; clear: both;&#125;/* 改进后的版本 */.clearfix:after&#123; content: \"200B\"; display: block; height: 0; clear: both;&#125;/* 或者 */.clearfix:after&#123; content: \"\"; display: table; clear: both;&#125;.clearfix&#123; zoom: 1; /*IE6/IE7*/&#125; sass &amp; postcss 123456789101112/// placeholder: sass占位符/// usage: @extend %clear-fix; %clearfix &#123; &amp;:after &#123; content: ''; display: table; clear: both; zoom: 1; &#125;&#125;/// postcss lostlost-utility: clearfix; 注：这是之前写的一篇，之前的博客被我全部删掉了，现在重新开始。时间还是使用之前的创建时间，特此说明。","categories":[{"name":"CSS","slug":"CSS","permalink":"https://lencx.github.io/blog/categories/CSS/"}],"tags":[{"name":"clearfix","slug":"clearfix","permalink":"https://lencx.github.io/blog/tags/clearfix/"},{"name":"Tricks","slug":"Tricks","permalink":"https://lencx.github.io/blog/tags/Tricks/"}]}]}